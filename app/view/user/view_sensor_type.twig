{% extends 'user/layout.twig' %}

{% block content %}
<div class="row">
    <div class="col-12">
        <div class="card card-info">
        <form action="{{ path_for('setting.sensorType') }}" method="post" autocomplete="off" role="form" class="form-horizontal">
                <div class="card-body">

                    {% for i in 1..8 %}
                        {% set sensorName = "sensor" ~ i ~ "_name" %}
                        {% set sensorType = "sensor" ~ i ~ "_type" %}
                        {% set sensorPin = "sensor" ~ i ~ "_pin" %}
                        {% set sensorNameValue = userSensors[sensorName] %}
                        {% set sensorTypeValue = (sensorNameValue != 0) ? sensors[sensorNameValue].sensor_type : '' %}
                        {% set sensorPinValue = userSensors[sensorPin] %}

                    <div class="form-group row" data-id="{{i}}">
                        <label class="col-sm-2 col-form-label" for="{{sensorName}}">
                            Sensor {{i}}
                        </label>
                        <div class="col-sm-3">
                            <select class="custom-select sensor-name" name="{{sensorName}}">
                                <option value="" data-type="">--Select--</option>

                                {% for sensor in sensors %}

                                <option value="{{sensor.sensor_type_id}}"
                                    {{ (sensor.sensor_type_id == sensorNameValue) ? 'selected' : ''}}
                                    data-type="{{sensor.sensor_type}}" >
                                    {{sensor.sensor_name}}
                                </option>

                                {% endfor %}
                            </select>
                        </div>

                        <label class="col-sm-1 col-form-label">Type</label>
                        <div class="col-sm-2">
                            <input type="text" class="form-control sensor-type" id="{{sensorType}}" value="{{sensorTypeValue}}" {{ (sensorTypeValue is not empty) ? 'readonly' : 'disabled'}} >
                        </div>

                        <label class="col-sm-2 col-form-label">PIN Number</label>
                        <div class="col-sm-2">
                            <select class="custom-select sensor-pin" name="{{sensorPin}}" id="{{sensorPin}}" {{ (sensorTypeValue is not empty) ? '' : 'disabled'}}>
                                <option value="" data-type="">--Select--</option>

                                {% if sensorTypeValue is not empty %}
                                    {% set prefix = sensorTypeValue == 'Digital' ? 'D' : 'A' %}

                                    {% for i in 1..5 %}

                                        <option value="{{prefix~i}}"
                                        {{ (prefix~i == sensorPinValue) ? 'selected' : ''}}>
                                        {{prefix~i}}
                                        </option>

                                    {% endfor %}

                                {% endif %}
                            </select>
                            <div class="invalid-feedback">Pin should not be empty/duplicate</div>
                        </div>
                    </div>

                    <hr>

                    {% endfor %}

                    <div class="form-group row">
                        <div class="col-sm-2"></div>
                        <div class="col-sm-2">
                            <button class="btn btn-primary" type="submit" id="submitBtn">Update</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block scriptcontent %}
<script>
var selectedPinNumber = [];

$(document).ready(function() {
    // sensor name dropdown change
    $('.sensor-name').on('change', function() {
        let rowId = $(this).parent().parent().data('id');
        let sensorType = $(this).find(':selected').data('type');

        console.log(sensorType);

        $('#sensor' + rowId + '_type').val(sensorType);
        if (sensorType != '') {
            $('#sensor' + rowId + '_type').removeAttr('disabled').prop('readonly',true);
        } else {
            $('#sensor' + rowId + '_type').removeAttr('readonly').prop('disabled',true);
        }

        buildPinDropdown(rowId, sensorType);
    });

    // pin number dropdown change
    $('.sensor-pin').on('change', function() {
        let rowId = $(this).parent().parent().data('id');
        let pinNumber = $(this).find(':selected').val();

        if (pinNumber == '') {
            $('#sensor'+rowId+'_pin').addClass('is-invalid');
        } else {
            $('#sensor'+rowId+'_pin').removeClass('is-invalid');
        }
    });

    $("#submitBtn").click(function(e) {
        let isValid = true;

        isValid = validateSensorType();
        isValid = validatePinNumber();
        if (!isValid) {
            e.preventDefault();
        }
    })
});

function buildPinDropdown(rowId, sensorType, pinNumber='')
{
    let prefix = '';
    let dropdownString = '';
    if (sensorType === 'Analog') {
        prefix = 'A';
    } else if (sensorType === 'Digital') {
        prefix = 'D';
    }

    resetPinDropdownOptions(rowId);

    if (prefix !== '') {
        for (let i = 1; i <= 5; i++) {
            let value = prefix + i;

            dropdownString += '<option value="'+ value +'">' + value +'</option>';
        }

        $('#sensor'+rowId+'_pin').append(dropdownString);
        $('#sensor'+rowId+'_pin').prop('disabled', false);
    }
}

function resetPinDropdownOptions(rowId) {
    $('#sensor'+rowId+'_pin').find('option').not(':first').remove();
    $('#sensor'+rowId+'_pin').removeClass('is-invalid').prop('disabled', true);
}

function validateSensorType()
{
    let isValid = true;
    var analogCount = 1;
    var digitalCount = 1;

    $('.sensor-type').not(':disabled').each(function() {
        let rowId = $(this).parent().parent().data('id');
        let sensorTypeValue = $(this).val();

        if (sensorTypeValue === 'Analog') {
            if (analogCount > 5){
                alert('Analog Sensor should not more than 5!');
                isValid = false;
            }

            analogCount++;
        } else if (sensorTypeValue === 'Digital') {
            if (digitalCount > 5){
                alert('Digital Sensor should not more than 5!');
                isValid = false;
            }

            digitalCount++;
        }
    });

    return isValid;
}

function validatePinNumber()
{
    let isValid = true;
    let selectedPinNumber = [];

    $('.sensor-pin').not(':disabled').each(function() {
        let pinNumber = $(this).find(':selected').val();
        let rowId = $(this).parent().parent().data('id');

        if (pinNumber === '') {
            $('#sensor'+rowId+'_pin').addClass('is-invalid');

            isValid = false;
        }

        // check pin is not duplicate
        if (selectedPinNumber.includes(pinNumber)) {
            $('#sensor'+rowId+'_pin').addClass('is-invalid');
            isValid = false;
        }

        selectedPinNumber.push(pinNumber);
    });

    return isValid;
}
</script>
{% endblock %}
